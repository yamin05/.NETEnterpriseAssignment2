@using Assignment2.Models
@model CreateNewInterventionViewModel


@{
        ViewBag.Title = "Enter Details";
}

<h2>Create New Intervention</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
    
        @Html.ValidationMessage("success", new { @class = "text-success" })
        @Html.ValidationMessage("alert", new { @class = "text-danger" })

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.clientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.clientId , (SelectList)ViewBag.clients , htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.interventionTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.interventionTypeId, (SelectList)ViewBag.interventionTypes, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.interventionCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.interventionCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.interventionCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.interventionHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.interventionHours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.interventionHours, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (!ViewData.ModelState.IsValid || ViewData.ContainsKey("alert"))
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" readonly disabled/>
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        }
    </div>
}
<div>
    @Html.ActionLink("View All Interventions", "ListInterventions")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

 
