@model Assignment2.Models.ListInterventionViewModel

@{
    ViewBag.Title = "Change Intervention Status";
}

<h2>Change Intervention Status</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Client</h4>
        <hr />
        
        <div class="form-group">
            @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @readonly = "readonly" } })
                
            </div>
        </div>
        <div class="form-group">
            <div class="form-group">
                @Html.LabelFor(model => model.InterventionId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InterventionId, new { htmlAttributes = new { @readonly = "readonly" } })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InterventionTypeName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InterventionTypeName, new { htmlAttributes = new { @readonly = "readonly" } })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InterventionCost, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InterventionCost, new { htmlAttributes = new { @class = "form-control" } })
                    
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ClientDistrict, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClientDistrict, new { htmlAttributes = new { @class = "form-control" } })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Proposed", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

